const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const UserTriggerSchema = new Schema({
    uid 				: { type : String },
    created_at			: { type : Date },
    updated_at			: { type : Date },
    name				: { type : String },
    version             : { type : String },
    provider		    : { type : String },
    provider_title		: { type : String },
    event               : { type : String },
    input               : { type : String },
    input_schema        : { type : String },
    handlers            : [ ],
    inactive_handlers   : [ ],
    active              : { type : Boolean, default : true},
    interval            : { type : Number , default : 300000},
    polling             : { type : Boolean},
    type                : { type : String, default : "trigger" },
    user_uid            : { type : String },
    auth_uid            : { type : String },
    next_trigger        : { type : Number },
    last_occurrence     : { type : Number },
    stop_at             : { type : Number, default : 0 },
    locked              : { type : Boolean, default : false},
    hook_response       : { type : Schema.Types.Mixed },
    meta                : { type : Schema.Types.Mixed },
    auth_type           : { type : String},
    description 		: { type : String },
    output              : { type : Schema.Types.Mixed },
    mock_data           : { type : String },
    all_mock            : { type : String },
    icon                : { type : String },
    app_id              : { type : String },
    app_build_id        : { type : String },
    app_version         : { type : String },
    source              : { type : String },
    org_uid             : { type: String },
    env_uid             : { type: String },
    project_uid         : { type: String }
});

mongoose.model('UserTrigger', UserTriggerSchema)
module.exports = ['UserTrigger', UserTriggerSchema]