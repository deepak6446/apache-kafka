const mongoose = require("mongoose")
const crypto = require('crypto')
const Schema = mongoose.Schema

const TriggerHistorySchema = new Schema({
  uid: { type: String },
  name: { type: String },
  user_uid: { type: String },
  payload: { type: String },
  handlers: [],
  result: { type: String },
  type: { type: String },
  event: { type: String },
  sid: { type: String },
  provider_name: { type: String, default: "webhook" },
  provider_title: { type: String, default: "Webhook" },
  created_at: { type: Date },
  updated_at: { type: Date },
  response: { type: String },
  retry: { type: Number, default: 0 },
  executed: { type: Boolean }
})

TriggerHistorySchema.pre('save', function (next) {
  if (!this || !this.uid) {
    this.uid = 'thi' + crypto.randomBytes(18).toString('hex')
  }
  this.created_at = this.updated_at = new Date()
  next()
})

mongoose.model('TriggerHistory', TriggerHistorySchema)
module.exports = ['TriggerHistory', TriggerHistorySchema]